name: CI

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    steps:
      - name: Set up Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
        id: go

      - uses: actions/checkout@v4

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare Host
        run: |
          sudo apt-get -qq update || true
          sudo apt-get install -y bzr
          curl -LO https://dl.k8s.io/release/v1.32.1/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Run checks
        run: |
          make ci

      - name: Build
        env:
          REGISTRY: appscodeci
          DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          USERNAME: 1gtm
        run: |
          docker login --username ${USERNAME} --password ${DOCKER_TOKEN}
          make push

  # kubernetes:
  #   name: Kubernetes
  #   runs-on: ubuntu-24.04
  #   needs: build
  #   strategy:
  #     matrix:
  #       k8s: [v1.28.15, v1.30.13, v1.32.5, v1.33.1]
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Create Kubernetes ${{ matrix.k8s }} cluster
  #       id: kind
  #       uses: engineerd/setup-kind@v0.5.0
  #       with:
  #         version: v0.29.0
  #         config: hack/kubernetes/kind.yaml
  #         image: kindest/node:${{ matrix.k8s }}

  #     - name: Prepare cluster for testing
  #       id: local-path
  #       env:
  #         DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  #         USERNAME: 1gtm
  #         REGISTRY_SECRET: regcred
  #       run: |
  #         echo "waiting for nodes to be ready ..."
  #         kubectl wait --for=condition=Ready nodes --all --timeout=5m
  #         kubectl get nodes
  #         echo
  #         kubectl version
  #         echo
  #         echo "install helm 3"
  #         curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
  #         echo
  #         echo "create docker-registry secret"
  #         kubectl create secret docker-registry ${REGISTRY_SECRET} --namespace=kube-system --docker-server=https://index.docker.io/v1/ --docker-username=${USERNAME} --docker-password=${DOCKER_TOKEN}

  #     - name: Check out installer
  #       run: |
  #         cd ..
  #         git clone https://github.com/kmodules/installer.git
  #         cd installer
  #         git checkout master

  #     - name: Run e2e tests
  #       env:
  #         REGISTRY: appscodeci
  #         REGISTRY_SECRET: regcred
  #         TEST_CREDENTIALS: ${{ secrets.TEST_CREDENTIALS }}
  #         GOOGLE_SERVICE_ACCOUNT_JSON_KEY: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON_KEY }}
  #       run: |
  #         echo "preparing test credentials"
  #         mkdir -p hack/config
  #         echo -n "$TEST_CREDENTIALS" > hack/config/.env
  #         echo >> hack/config/.env
  #         echo "GOOGLE_SERVICE_ACCOUNT_JSON_KEY=$(echo $GOOGLE_SERVICE_ACCOUNT_JSON_KEY)" >> hack/config/.env
  #         make install || ( kubectl describe deployment -n kube-system auditor; kubectl logs -n kube-system deployment/auditor; exit 1; )
  #         echo
  #         make e2e-tests
